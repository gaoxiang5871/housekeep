-- MySQL Script generated by MySQL Workbench
-- Sat Apr  1 16:56:13 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema jimikongjian
-- -----------------------------------------------------
-- 机密空间

-- -----------------------------------------------------
-- Schema jimikongjian
--
-- 机密空间
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `jimikongjian` DEFAULT CHARACTER SET utf8 ;
USE `jimikongjian` ;

-- -----------------------------------------------------
-- Table `jimikongjian`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id，自动增长',
  `email` VARCHAR(200) NOT NULL COMMENT '邮箱',
  `password` VARCHAR(200) NOT NULL COMMENT '密码',
  `status` INT NOT NULL DEFAULT 0 COMMENT '用户状态（\n0：离线\n1：在线）',
  `type` INT NOT NULL DEFAULT 0 COMMENT '账户状态（\n0：注册未激活\n1：正常用户\n-1：禁用用户）',
  `activation_key` VARCHAR(32) NOT NULL COMMENT '激活码',
  `reset_password_key` VARCHAR(100) NOT NULL COMMENT '重置密码密钥',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `last_login_time` DATETIME NOT NULL COMMENT '上一次登陆的时间',
  `last_login_ip` VARCHAR(64) NOT NULL COMMENT '上一次登陆的ip',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `jimikongjian`.`user_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`user_info` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id，自动增长',
  `user_id` INT NOT NULL COMMENT '对应的是user表中id字段',
  `user_email` VARCHAR(200) NOT NULL COMMENT '对应的是user表的用户邮箱',
  `nick` VARCHAR(100) NOT NULL COMMENT '昵称',
  `avatar` VARCHAR(300) NOT NULL COMMENT '头像（存储头像的文件名）系统会自动将文件的存储地址+文件拼写成一个url返给前端',
  `signature` VARCHAR(300) NULL COMMENT '个性签名',
  `sex` INT NULL DEFAULT 0 COMMENT '性别（\n0：男生\n1：女生）',
  `age` INT NULL DEFAULT 0 COMMENT '年龄',
  `mobile` VARCHAR(11) NULL COMMENT '手机号',
  `birthday` DATE NULL COMMENT '生日',
  `city` VARCHAR(500) NULL COMMENT '城市',
  `vip` INT NULL DEFAULT 0 COMMENT 'VIP会员（\n0：不是VIP\n1：是VIP）',
  `interest` VARCHAR(50) NULL COMMENT '兴趣',
  `show` INT NOT NULL DEFAULT 0 COMMENT '个人信息公开（\n0:   保密\n1：公开个人信息）',
  PRIMARY KEY (`id`),
  INDEX `fk_user_info_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_info_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`room` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '表自身的id',
  `name` VARCHAR(40) NOT NULL COMMENT '空间名',
  `cover` VARCHAR(300) NOT NULL COMMENT '空间封面图片的名字，系统会获取到地址后，会自动封装成封面存储地址的url',
  `creator_id` INT NOT NULL COMMENT '创建人用户的id号',
  `creator_email` VARCHAR(200) NOT NULL COMMENT '创建人的email',
  `signature` VARCHAR(100) NOT NULL,
  `creator_nick` VARCHAR(100) NOT NULL COMMENT '创建者昵称',
  `type` INT NOT NULL DEFAULT 0 COMMENT '公有类型为0，私有类型为1',
  `tags` VARCHAR(200) NULL COMMENT '标签',
  `peoples` INT NOT NULL DEFAULT 0 COMMENT '空间人数',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`),
  INDEX `fk_room_creator_email_idx` (`creator_email` ASC),
  CONSTRAINT `fk_room_creator_email`
    FOREIGN KEY (`creator_email`)
    REFERENCES `jimikongjian`.`user` (`email`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`article`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`article` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `author` INT NOT NULL COMMENT '文章发表者的id',
  `author_nick` VARCHAR(100) NOT NULL COMMENT '文章发表者的昵称',
  `title` VARCHAR(200) NOT NULL COMMENT '文章标题',
  `content` LONGTEXT NOT NULL COMMENT '文章内容',
  `like_count` INT NOT NULL DEFAULT 0 COMMENT '文章点赞总数',
  `comment_count` INT NOT NULL DEFAULT 0 COMMENT '文章评论总数',
  `share_count` INT NOT NULL DEFAULT 0 COMMENT '文章被转发数',
  `room_id` INT NOT NULL COMMENT '文章所属空间的id',
  `room_name` VARCHAR(100) NOT NULL COMMENT '空间名称',
  `type` INT NOT NULL DEFAULT 1 COMMENT '文章类型（\n0：转发 \n1：原创\n）',
  `originator` INT NULL COMMENT '文章原创作者id',
  `originator_nick` VARCHAR(100) NULL COMMENT '文章原创者的昵称',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建文章的时间',
  `value` FLOAT NULL DEFAULT 0 COMMENT '文章受欢迎程度权重。',
  PRIMARY KEY (`id`),
  INDEX `fk_article_room_id_idx` (`room_id` ASC),
  INDEX `fk_article_author_idx` (`author` ASC),
  CONSTRAINT `fk_article_author`
    FOREIGN KEY (`author`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_article_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `jimikongjian`.`room` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `comment_id` INT NOT NULL COMMENT '评论者id，对应的是user表中的id号',
  `comment_nick` VARCHAR(100) NOT NULL COMMENT '评论者的昵称',
  `content` INT NOT NULL COMMENT '\n	评论信息\n',
  `article_id` INT NOT NULL COMMENT '评论文章的id',
  `comment_parent_id` INT NOT NULL COMMENT '被评论者的id',
  `comment_parent_nick` VARCHAR(100) NOT NULL COMMENT '被评论者的昵称',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '评论时间',
  PRIMARY KEY (`id`),
  INDEX `fk_comment_comment_id_idx` (`comment_id` ASC),
  INDEX `fk_comment_article_id_idx` (`article_id` ASC),
  INDEX `fk_comment_comment_parent_id_idx` (`comment_parent_id` ASC),
  CONSTRAINT `fk_comment_comment_id`
    FOREIGN KEY (`comment_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_article_id`
    FOREIGN KEY (`article_id`)
    REFERENCES `jimikongjian`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_comment_parent_id`
    FOREIGN KEY (`comment_parent_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`room_follower`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`room_follower` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `room_id` INT NOT NULL COMMENT '空间id',
  `user_id` INT NOT NULL COMMENT '关注者的id',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '评论时间',
  PRIMARY KEY (`id`),
  INDEX `fk_room_follower_room_id_idx` (`room_id` ASC),
  INDEX `fk_room_follower_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_room_follower_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `jimikongjian`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_room_follower_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`tag` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `tag` VARCHAR(100) NOT NULL COMMENT '标签内容',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '标签创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`application_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`application_info` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `applicator_id` INT NOT NULL COMMENT '申请者id',
  `applicator_nick` VARCHAR(100) NOT NULL COMMENT '申请者昵称',
  `content` VARCHAR(200) NULL COMMENT '申请理由',
  `room_id` INT NOT NULL COMMENT '申请的空间id',
  `room_name` VARCHAR(100) NOT NULL COMMENT '\n\n申请\n\n空间的名称\n',
  `room_creator` INT NOT NULL COMMENT '审批者id',
  `status` INT NOT NULL DEFAULT 0 COMMENT '查看状态（\n0：未查看审批信息\n1：已查看申请信息\n）',
  `type` INT NOT NULL DEFAULT 0 COMMENT '审批状态（\n-1：拒绝\n0：未处理\n1：同意\n）',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`),
  INDEX `fk_application_info_applicator_id_idx` (`applicator_id` ASC),
  INDEX `fk_application_info_room_id_idx` (`room_id` ASC),
  INDEX `fk_application_info_room_creator_idx` (`room_creator` ASC),
  CONSTRAINT `fk_application_info_applicator_id`
    FOREIGN KEY (`applicator_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_info_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `jimikongjian`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_info_room_creator`
    FOREIGN KEY (`room_creator`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`following`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`following` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `user_id` INT NOT NULL COMMENT '关注者的id',
  `user_nick` VARCHAR(100) NOT NULL COMMENT '关注者的昵称',
  `following_id` INT NOT NULL COMMENT '被关注者的id',
  `following_nick` VARCHAR(100) NOT NULL COMMENT '被关注者的昵称',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '关注时间',
  PRIMARY KEY (`id`),
  INDEX `fk_following_user_id_idx` (`user_id` ASC),
  INDEX `fk_following_following_id_idx` (`following_id` ASC),
  CONSTRAINT `fk_following_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_following_following_id`
    FOREIGN KEY (`following_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`album` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `user_id` INT NOT NULL COMMENT '创建者的id号',
  `user_nick` VARCHAR(100) NOT NULL COMMENT '创建者的昵称',
  `room_id` INT NOT NULL COMMENT '所属空间的id',
  `room_name` VARCHAR(100) NOT NULL COMMENT '所属空间的名称',
  `album_title` VARCHAR(200) NULL COMMENT '相册的名字',
  `album_desc` TEXT NULL COMMENT '相册的描述',
  `photos_count` INT NOT NULL DEFAULT 0 COMMENT '相册中图片的数量',
  `cover` VARCHAR(300) NOT NULL COMMENT '相册的封面（ 默认以相册第一张为封面 ）',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '相册创建时间',
  PRIMARY KEY (`id`),
  INDEX `fk_albums_user_id_idx` (`user_id` ASC),
  INDEX `fk_albums_room_id_idx` (`room_id` ASC),
  CONSTRAINT `fk_albums_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albums_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `jimikongjian`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`photo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`photo` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `photo_key` VARCHAR(300) NOT NULL COMMENT '照片的名称，系统会将照片名称自动封装成url地址',
  `album_id` INT NOT NULL COMMENT '相册id',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`),
  INDEX `fk_photos_album_id_idx` (`album_id` ASC),
  CONSTRAINT `fk_photos_album_id`
    FOREIGN KEY (`album_id`)
    REFERENCES `jimikongjian`.`album` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`interest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`interest` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `user_id` INT NOT NULL COMMENT '用户的id号',
  `tag_id` INT NOT NULL COMMENT '标签id',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`),
  INDEX `fk_interests_user_id_idx` (`user_id` ASC),
  INDEX `fk_interests_tag_id_idx` (`tag_id` ASC),
  CONSTRAINT `fk_interests_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interests_tag_id`
    FOREIGN KEY (`tag_id`)
    REFERENCES `jimikongjian`.`tag` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`like` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `user_id` INT NOT NULL COMMENT '用户id',
  `article_id` INT NOT NULL COMMENT '文章id',
  `aricle_title` VARCHAR(200) NOT NULL COMMENT '文章标题',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '收藏时间',
  PRIMARY KEY (`id`),
  INDEX `fk_liks_user_id_idx` (`user_id` ASC),
  INDEX `fk_liks_article_id_idx` (`article_id` ASC),
  CONSTRAINT `fk_liks_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_liks_article_id`
    FOREIGN KEY (`article_id`)
    REFERENCES `jimikongjian`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`notifications` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id',
  `notify_id` INT NOT NULL COMMENT '创建通知的id，对应的是user表中的id',
  `notify_nick` VARCHAR(100) NOT NULL COMMENT '创建通知的昵称',
  `content` TEXT NOT NULL COMMENT '通知的内容',
  `notified_id` INT NOT NULL COMMENT '被通知者的id，对应的是user表中的id',
  `notified_nick` VARCHAR(100) NOT NULL COMMENT '被通知者的昵称',
  `status` INT NOT NULL DEFAULT 0 COMMENT '查看状态（\n0：表示通知未被查看\n1：表示通知已被查看\n）',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '通知创建的时间',
  PRIMARY KEY (`id`),
  INDEX `fk_notifications_notify_id_idx` (`notify_id` ASC),
  INDEX `fk_notifications_notified_id_idx` (`notified_id` ASC),
  CONSTRAINT `fk_notifications_notify_id`
    FOREIGN KEY (`notify_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_notified_id`
    FOREIGN KEY (`notified_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `jimikongjian`.`unread_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `jimikongjian`.`unread_comment` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自身id号',
  `user_id` INT NOT NULL COMMENT '用户的id号',
  `article_id` INT NOT NULL COMMENT '文章的id号',
  `article_title` VARCHAR(200) NOT NULL COMMENT '未读文章的标题',
  `unread_count` INT NOT NULL DEFAULT 0 COMMENT '未读某一篇文章的条数',
  PRIMARY KEY (`id`),
  INDEX `fk_unread_comment_user_id_idx` (`user_id` ASC),
  INDEX `fk_unread_comment_article_id_idx` (`article_id` ASC),
  CONSTRAINT `fk_unread_comment_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `jimikongjian`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_unread_comment_article_id`
    FOREIGN KEY (`article_id`)
    REFERENCES `jimikongjian`.`article` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
